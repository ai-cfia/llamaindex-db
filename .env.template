# Storage Account Connection String. Obtain this from your Azure Storage account
# in the Azure Portal under "Access keys".
STORAGE_ACCOUNT_CONN_STRING=

# API Key for Azure OpenAI. Same value for both. Get this from the Azure portal
# under your Azure OpenAI Service resource.
OPENAI_API_KEY=
AZURE_OPENAI_API_KEY=

# Endpoint URL for Azure OpenAI. Find this in the Overview section of your Azure
# OpenAI Service resource in the Azure portal.
AZURE_ENDPOINT=

# API Version for Azure OpenAI Check the Azure OpenAI documentation for the
# current API version
# OPENAI_API_VERSION=2023-07-01-preview

# Language Model for Azure OpenAI. Specify the model you wish to use.
# LLM_MODEL=gpt-4

# Language Model Deployment Name for Azure OpenAI If you have a custom
# deployment, specify its name here. Otherwise, leave commented
# LLM_DEPLOYMENT_NAME=ailab-llm

# Embedding Model for Azure OpenAI Specify the embedding model you wish to use.
# Check Azure OpenAI documentation for available models 
# EMBED_MODEL=ada

# Embedding Model Deployment Name for Azure OpenAI.
# EMBED_DEPLOYMENT_NAME=text-embedding-ada-002

# Database Connection Configuration These details will be specific to your
# database. Obtain them from your database administrator or setup
DB_SCHEME=
DB_HOST=
DB_PORT=
DB_USER=
DB_PASSWORD=
DB_NAME=

# Table and Column for Querying the Database Specify the table and column you
# wish to query. This will depend on your database schema 
# TABLE_NAME=
# COLUMN=

# ailab-llamaindex-search parameters. Adapt to your needs.
# Ask your cloud admin for the secrets.
LLAMAINDEX_DB_EMBED_MODEL_PARAMS='{"model": "text-embedding-ada-002", "deployment_name": "ada", "api_key": "<azure_openai_api_key>", "api_version": "2023-07-01-preview", "azure_endpoint": "<azure_openai_endpoint>"}'
LLAMAINDEX_DB_VECTOR_STORE_PARAMS='{"database": "llamaindex_db_legacy", "host": "<postgres_host>", "password": "<postgres_password>", "port": "5432", "user": "<postgres_user>", "embed_dim": 1536}'
LLAMAINDEX_DB_TRANS_PATHS={"id": "node/metadata/id", "chunk_id": "node/metadata/chunk_id", "url": "node/metadata/url", "title": "node/metadata/title", "subtitle": "node/metadata/subtitle", "tokens_count": "node/metadata/tokens_count", "last_updated": "node/metadata/last_updated", "score": "node/metadata/score", "llamaindex_id": "node/id_", "llamaindex_score": "score", "content": "node/text"}
